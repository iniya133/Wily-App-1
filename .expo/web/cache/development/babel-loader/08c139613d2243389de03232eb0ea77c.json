{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\ToastsWily-master\\\\screens\\\\SearchScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport db from \"../config\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar Searchscreen = function (_React$Component) {\n  _inherits(Searchscreen, _React$Component);\n\n  function Searchscreen(props) {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchscreen).call(this, props));\n\n    _this.fetchMoreTransactions = function _callee() {\n      var text, enteredText, query, _query;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              text = _this.state.search.toUpperCase();\n              enteredText = text.split(\"\");\n\n              if (!(enteredText[0].toUpperCase() === \"B\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", text).startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 5:\n              query = _context.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              if (!(enteredText[0].toUpperCase() === \"S\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", text).startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 12:\n              _query = _context.sent;\n\n              _query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.searchTransactions = function _callee2(text) {\n      var enteredText, transactions, _transactions;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              enteredText = text.split(\"\");\n\n              if (!(enteredText[0].toUpperCase() === \"B\")) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where('bookId', \"==\", text).get());\n\n            case 4:\n              transactions = _context2.sent;\n              transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context2.next = 13;\n              break;\n\n            case 8:\n              if (!(enteredText[0].toUpperCase() === \"S\")) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where('bookId', \"==\", text).get());\n\n            case 11:\n              _transactions = _context2.sent;\n              transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.componentDidMount = function _callee3() {\n      var query;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").limit(10).get());\n\n            case 2:\n              query = _context3.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  alltransactions: [],\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      allTransactions: [],\n      lastVisibleTransaction: null,\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(View, {\n        style: styles.searchBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(TextInput, {\n        style: styles.bar,\n        placeholder: \"Enter Book Id or Student Id\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            search: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.searchTransactions(_this2.state.search);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, \"Search\"))), React.createElement(FlatList, {\n        data: this.state.allTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              borderBottomWidth: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            }\n          }, \" \", \"Book Id: \" + item.bookId, \" \"), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            }\n          }, \" \", \"Student Id: \" + item.studentId, \" \"), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            }\n          }, \" \", \"Transaction Type: \" + item.transactionType, \" \"), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            }\n          }, \" \", \"Date: \" + item.date.toDate(), \" \"));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReached: this.fetchMoreTransactions,\n        onEndReachedThreshold: 0.7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }));\n    }\n  }]);\n\n  return Searchscreen;\n}(React.Component);\n\nexport { Searchscreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  searchBar: {\n    flexDirection: 'row',\n    height: 40,\n    width: 'auto',\n    borderWidth: 0.5,\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  searchButton: {\n    borderWidth: 1,\n    height: 30,\n    width: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'green'\n  },\n  bar: {\n    borderWidth: 2,\n    height: 30,\n    width: 300,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/ToastsWily-master/screens/SearchScreen.js"],"names":["React","db","ScrollView","Searchscreen","props","fetchMoreTransactions","text","state","search","toUpperCase","enteredText","split","collection","where","startAfter","lastVisibleTransaction","limit","get","query","docs","map","doc","setState","allTransactions","data","searchTransactions","transactions","transaction","componentDidMount","alltransactions","flex","justifyContent","alignItems","styles","searchBar","bar","searchButton","item","borderBottomWidth","bookId","studentId","transactionType","date","toDate","index","toString","Component","StyleSheet","create","container","marginTop","flexDirection","height","width","borderWidth","backgroundColor","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, FlatList, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport db from \"../config\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nexport default class Searchscreen extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      allTransactions:[],\n      lastVisibleTransaction:null,\n      search:''\n    }\n  }\n  fetchMoreTransactions = async () => {\n    var text = this.state.search.toUpperCase()\n    var enteredText = text.split(\"\")\n    if(enteredText[0].toUpperCase()=== \"B\" ){\n      const query = await db.collection(\"transactions\").where(\"bookId\",\"==\",text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions:[...this.state.allTransactions,doc.data()],\n          lastVisibleTransaction:doc\n        })\n      })\n    }\n    else if(enteredText[0].toUpperCase()=== \"S\" ){\n      const query = await db.collection(\"transactions\").where(\"bookId\",\"==\",text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions:[...this.state.allTransactions,doc.data()],\n          lastVisibleTransaction:doc\n        })\n      })\n    }\n  }\n  searchTransactions = async (text) => {\n    var enteredText = text.split(\"\")\n    if(enteredText[0].toUpperCase()=== \"B\"){\n      const transactions = await db.collection(\"transactions\").where('bookId',\"==\",text).get()\n      transaction.docs.map((doc)=>{\n        this.setState({\n          allTransactions:[...this.state.allTransactions,doc.data()],\n          lastVisibleTransaction:doc\n        })\n      })\n    }\n    else if(enteredText[0].toUpperCase()=== \"S\"){\n      const transactions = await db.collection(\"transactions\").where('bookId',\"==\",text).get()\n      transaction.docs.map((doc)=>{\n        this.setState({\n          allTransactions:[...this.state.allTransactions,doc.data()],\n          lastVisibleTransaction:doc\n        })\n      })\n    }\n  }\n  componentDidMount = async () => {\n    const query = await db.collection (\"transactions\").limit(10).get()\n    query.docs.map((doc)=>{\n      this.setState({\n        alltransactions:[],\n        lastVisibleTransaction:doc\n      })\n    })\n  }\n\n    render() {\n      return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <View style ={styles.searchBar}>\n            <TextInput\n            style = {styles.bar}\n            placeholder = \"Enter Book Id or Student Id\"\n            onChangeText = {(text) =>{\n              this.setState({\n                search:text\n              })\n            }}\n            />\n            <TouchableOpacity\n            style = {styles.searchButton}\n            onPress = {()=>{\n              this.searchTransactions(this.state.search)\n            }}\n            >\n              <Text>Search</Text>\n            </TouchableOpacity>\n          </View>\n          <FlatList \n          data = {this.state.allTransactions}\n          renderItem = {({item})=>(\n            <View\n            style = {{borderBottomWidth:2}}\n            >\n              <Text> {\"Book Id: \"+ item.bookId} </Text>\n              <Text> {\"Student Id: \"+item.studentId} </Text>\n              <Text> {\"Transaction Type: \"+item.transactionType} </Text>\n              <Text> {\"Date: \"+item.date.toDate()} </Text>\n            </View>\n          )}\n          keyExtractor = {(item,index) => index.toString() }\n          onEndReached = {this.fetchMoreTransactions}\n          onEndReachedThreshold = {0.7}\n          />\n\n        </View>\n      );\n    }\n  }\n  const styles = StyleSheet.create({\n    container:{\n      flex:1, \n      marginTop:20\n    },\n    searchBar:{\n      flexDirection:'row',\n      height:40,\n      width:'auto',\n      borderWidth:0.5,\n      alignItems:'center',\n      backgroundColor:'grey'\n    },\n    searchButton:{\n      borderWidth:1,\n      height:30,\n      width:5,\n      alignItems:'center',\n      justifyContent:'center',\n      backgroundColor:'green'\n    },\n    bar:{\n      borderWidth:2,\n      height:30,\n      width:300,\n      paddingLeft:10,\n    }\n  })\n  "]},"metadata":{},"sourceType":"module"}