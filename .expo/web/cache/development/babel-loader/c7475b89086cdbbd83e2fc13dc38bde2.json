{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\ToastsWily-master\\\\screens\\\\LoginScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n\n    _this.login = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigator.navigate('Transaction');\n              }\n\n              _context.next = 17;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 13 : _context.t1 === 'auth/invalid-email' ? 15 : 17;\n              break;\n\n            case 13:\n              Alert.alert(\"User does not exist\");\n              return _context.abrupt(\"break\", 17);\n\n            case 15:\n              Alert.alert(\"Incorrect email or password\");\n              return _context.abrupt(\"break\", 17);\n\n            case 17:\n              _context.next = 20;\n              break;\n\n            case 19:\n              Alert.alert(\"Enter Email and Password\");\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.state = {\n      emailId: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/booklogo.jpg\"),\n        style: {\n          width: 200,\n          height: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, \"WILY\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, React.createElement(TextInput, {\n        style: StyleSheet.loginBox,\n        placeholder: \"abc%example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(TextInput, {\n        style: StyleSheet.loginBox,\n        placeholder: \"enter password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderwidth: 1,\n          marginTop: 20,\n          paddingTop: 5,\n          borderRadius: 7\n        },\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/ToastsWily-master/screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","login","email","password","auth","signInWithEmailAndPassword","response","props","navigator","navigate","code","Alert","alert","state","emailId","alignItems","marginTop","require","width","height","textAlign","fontSize","StyleSheet","loginBox","text","setState","borderwidth","paddingTop","borderRadius","Component","styles","create","borderWidth","margin","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n   Text,\r\n   View,\r\n   TouchableOpacity,\r\n   TextInput,\r\n   Image,\r\n   StyleSheet,\r\n  KeyboardAvoidingView ,\r\nToastAndroid,Alert} from 'react-native';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class LoginScreen extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            emailId:'',\r\n            password:'',\r\n        }\r\n    }\r\n    login = async (email,password)=>{\r\n        if(email && password ){\r\n        try{\r\n            const response = await firebase.auth().signInWithEmailAndPassword(email,password)\r\n            if(response){\r\n                this.props.navigator.navigate('Transaction')\r\n            }\r\n        }\r\n        catch(error){\r\n            switch(error.code){\r\n                case 'auth/user-not-found':\r\n                    Alert.alert(\"User does not exist\")\r\n                    break\r\n                case 'auth/invalid-email':\r\n                    Alert.alert(\"Incorrect email or password\")\r\n                    break \r\n            }\r\n        }\r\n    }\r\n        else {\r\n            Alert.alert(\"Enter Email and Password\")\r\n        }\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <KeyboardAvoidingView style = {{alignItems:'center' , marginTop:20 }}>\r\n                <View>\r\n                    <Image\r\n                    source = {require(\"../assets/booklogo.jpg\")}\r\n                    style = {{width:200, height:200}}\r\n                    />\r\n                    <Text style = {{ textAlign:'center', fontSize:30 }}>WILY</Text>\r\n                </View>\r\n                <View>\r\n                    <TextInput\r\n                    style = {StyleSheet.loginBox}\r\n                    placeholder = \"abc%example.com\"\r\n                    keyboardType = \"email-address\"\r\n                    onChangeText = {(text) => {\r\n                        this.setState({\r\n                            emailId:text\r\n                        })\r\n                    }}\r\n                    />\r\n                </View>\r\n                <View>\r\n                    <TextInput\r\n                    style = {StyleSheet.loginBox}\r\n                    placeholder = \"enter password\"\r\n                    secureTextEntry = {true}\r\n                    onChangeText = {(text) => {\r\n                        this.setState({\r\n                            password:text\r\n                        })\r\n                    }}\r\n                    />\r\n                </View>\r\n                <View>\r\n                    <TouchableOpacity \r\n                    style = {{height:30, width:90, borderwidth:1, marginTop:20, paddingTop:5, borderRadius:7 }}\r\n                    onPress = { () => {\r\n                        this.login(this.state.emailId, this.state.password)\r\n                    }}\r\n                    >\r\n                        <Text style = {{textAlign:'center'}}>Login</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    loginBox:{\r\n        width:300,\r\n        height:40,\r\n        borderWidth:1.5,\r\n        fontSize:20,\r\n        margin:10,\r\n        paddingLeft:10,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}